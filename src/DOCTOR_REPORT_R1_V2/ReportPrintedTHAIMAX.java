/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package DOCTOR_REPORT_R1_V2;

import static DOCTOR_REPORT_R1_V2.LoginMain.LoginCono;
import static DOCTOR_REPORT_R1_V2.LoginMain.LoginDivision;
import java.awt.Desktop;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.util.List;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.chrono.ThaiBuddhistDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mahakit
 */
public class ReportPrintedTHAIMAX extends javax.swing.JFrame {

    SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
    SimpleDateFormat format2 = new SimpleDateFormat("yyyyMMdd", Locale.ENGLISH);
    DefaultTableModel model1;
    String selectednum = new String();
    Date chosedate = ReportTHAIMAXnew.chosendate;
    Integer amounttick = 0;

    /**
     * Creates new form ReportPrinted
     */
    public ReportPrintedTHAIMAX() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage("icon.png"));
        this.setTitle("Company  " + LoginMain.LoginCompanyName);
        model1 = (DefaultTableModel) jTable1.getModel();
        lblCompanyName.setText(LoginMain.LoginCompanyName);
        showingdate.setText("Chosen Date: " + format.format(ReportTHAIMAXnew.chosendate));
        getTHmaxPrinted();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCompanyName = new java.awt.Label();
        showingdate = new java.awt.Label();
        jLabel1 = new javax.swing.JLabel();
        jCheckBoxSelectAll = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnCancel = new java.awt.Button();
        buttonPrint = new java.awt.Button();
        jButtonRefresh = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        documentfoundnum = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lblCompanyName.setAlignment(java.awt.Label.CENTER);
        lblCompanyName.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblCompanyName.setForeground(new java.awt.Color(204, 0, 0));
        lblCompanyName.setText("Company Name");

        showingdate.setAlignment(java.awt.Label.CENTER);
        showingdate.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        showingdate.setForeground(new java.awt.Color(51, 102, 255));
        showingdate.setText("Date");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("PRINTED THAIMAX DOCUMENT");

        jCheckBoxSelectAll.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jCheckBoxSelectAll.setText("Select All");
        jCheckBoxSelectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSelectAllActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Deliverer Detail", "Inv No.", "Warehouse Code", "Warehouse Name", "Date", "Print"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(5).setMinWidth(40);
            jTable1.getColumnModel().getColumn(5).setMaxWidth(40);
        }

        btnCancel.setBackground(new java.awt.Color(240, 240, 240));
        btnCancel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(0, 0, 0));
        btnCancel.setLabel("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        buttonPrint.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        buttonPrint.setLabel("Print");
        buttonPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPrintActionPerformed(evt);
            }
        });

        jButtonRefresh.setBackground(new java.awt.Color(255, 255, 255));
        jButtonRefresh.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jButtonRefresh.setForeground(new java.awt.Color(0, 0, 0));
        jButtonRefresh.setText("Refresh");
        jButtonRefresh.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefreshActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Found:");

        documentfoundnum.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        documentfoundnum.setForeground(new java.awt.Color(0, 0, 0));
        documentfoundnum.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(24, 24, 24))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel3)
                        .addGap(2, 2, 2)
                        .addComponent(documentfoundnum, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jButtonRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(199, 199, 199)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 242, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(showingdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCheckBoxSelectAll)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblCompanyName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(361, 361, 361))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(98, Short.MAX_VALUE)
                                .addComponent(jCheckBoxSelectAll)
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblCompanyName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonRefresh)
                                    .addComponent(showingdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(buttonPrint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(documentfoundnum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        CheckRemark();

        //        MouseListener();
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        this.show(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void jCheckBoxSelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSelectAllActionPerformed
        // TODO add your handling code here:
        if (jCheckBoxSelectAll.isSelected()) {
            for (int i = 0; i <= model1.getRowCount() - 1; i++) {
                model1.setValueAt(true, i, 5);
            }
        } else {
            for (int i = 0; i <= model1.getRowCount() - 1; i++) {
                model1.setValueAt(false, i, 5);
            }
        }
        CheckRemark();
    }//GEN-LAST:event_jCheckBoxSelectAllActionPerformed

    private Boolean getDuplicateCO(String conumber) {

        try {

            Connection conn = ConnectDB2.ConnectionDB();
            Statement sta = conn.createStatement();

            String Sql = "SELECT COUNT(*) AS COUNT  \n"
                    + "FROM BRLDTA0100.INVCNRN1 \n"
                    + "WHERE INCONO = '" + LoginCono + "' \n"
                    + "AND INORNO = '" + conumber + "'";

            ResultSet rs = sta.executeQuery(Sql);

            while (rs.next()) {
                int count = rs.getInt("COUNT");
                if (count > 0) {
                    return true;
                }

            }
            rs.close();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        return false;

    }
    private void buttonPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPrintActionPerformed
        // TODO add your handling code here:
        ClassGetReport cgr = new ClassGetReport();
        boolean lastrow = false;
        //how many times that was ticked to check
        Integer printtimes = 0;
        buttonPrint.setEnabled(false);
        //check the amount ticked again or refreshing
        Amounttick();
        for (int i = 0; i <= model1.getRowCount() - 1; i++) {
            Boolean print = (Boolean) model1.getValueAt(i, 5);

            if (print == null) {
                print = false;
            }
            if (print) {

                
                    printtimes++;
//                    String sav_no = (String) model1.getValueAt(i, 1).toString().trim();
                    String invnumber = (String) model1.getValueAt(i, 1).toString().trim();
                    String date = (String) model1.getValueAt(i, 4).toString().trim();

//                    LocalDate localdate = LocalDate.parse(date);
//                    ThaiBuddhistDate thDate = ThaiBuddhistDate.from(localdate);
                    String[] data = getAddressTHMAX(invnumber);
//        JOptionPane.showMessageDialog(null, "bugged4?");
                    String year = date.substring(0, 4);
                    String month = date.substring(4, 6);
                    String day = date.substring(6, 8);
                    Integer year2 = Integer.parseInt(year) + 543;
                    String year3 = year2.toString();
                    String year4 = year3.substring(2, 4);

//                    System.out.println("conumber: " + conumber + " invnumber: " + invnumber + " date: " + date + " year: " + subYear);
//                    insertRNNumber(LoginCono, LoginDivision, "", invnumber, year4, format2.format(ReportTHAIMAXnew.chosendate), "thmax");
                    if (printtimes == amounttick) {
                        lastrow = true;
                        System.out.println("statement true");
                    }
                    cgr.getReportTHMAX(invnumber, data, day, month, year3);
//                    cgr.GetReportDoctorLocal(conumber, year, lastrow);
                    //selectedyear คือปีที่ จำ กับ selectednum คือเลข invoice ที่เลือก
                    //System.out.print("allyear is " + selectedyear);
                    //System.out.print("allnum is " + selectednum);

                

            }

        }
    }//GEN-LAST:event_buttonPrintActionPerformed

    private void Amounttick() {
        amounttick = 0;

        buttonPrint.setEnabled(false);

        for (int o = 0; o <= model1.getRowCount() - 1; o++) {

            Boolean print = (Boolean) model1.getValueAt(o, 5);

            if (print == null) {
                print = false;
            }

            if (print) {
                buttonPrint.setEnabled(true);
                amounttick++;
            } else {
                buttonPrint.setEnabled(false);
            }
        }

    }
    private void jButtonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshActionPerformed
        // TODO add your handling code here
        System.out.println(new JFileChooser().getFileSystemView().getDefaultDirectory().toString());
        getTHmaxPrinted();
    }//GEN-LAST:event_jButtonRefreshActionPerformed

    /**
     * @param args the command line arguments
     */
    //เอาข้อมูลเอกสารที่ปริ้นไปแล้ว
    private void CheckRemark() {

        buttonPrint.setEnabled(false);
        for (int i = 0; i <= model1.getRowCount() - 1; i++) {

            Boolean print = (Boolean) model1.getValueAt(i, 5);

            if (print == null) {
                print = false;
            }

            if (print) {
                buttonPrint.setEnabled(true);
                break;
            } else {
                buttonPrint.setEnabled(false);
            }
        }

    }

    private void getTHmaxPrinted() {
//        Runnable runnable = new Runnable() {
//        public void run() {
//                jButton1.setEnabled(false);
        try {

            while (model1.getRowCount() > 0) {
                for (int i = 0; i < model1.getRowCount(); ++i) {
                    model1.removeRow(i);
                }
            }

            Connection conn = ConnectMsSql.ConnectionDB();
            Statement sta = conn.createStatement();
            Connection conn2 = ConnectMsSql.ConnectionDB();
            Statement sta2 = conn2.createStatement();
            Connection conn3 = ConnectDB2.ConnectionDB();
            Statement sta3 = conn3.createStatement();
            String WHSname = null;
            String Sql = "SELECT DISTINCT  TOP (100) PERCENT BRLAS400.DBO.T_THAIMAXSAVE_NO.SAV_NO,\n"
                    + "CAST(YEAR(SAV_DATE) AS VARCHAR(4))\n"
                    + "+ RIGHT(REPLICATE('0', 2) + CAST(MONTH(SAV_DATE) AS VARCHAR(2)), 2) +\n"
                    + "RIGHT(REPLICATE('0', 2) + CAST(DAY(SAV_DATE) AS VARCHAR(2)), 2) AS DATE,\n"
                    + "BRLAS400.DBO.T_THAIMAX_WHS.DESCRIPTION AS WAREHOUSE,\n"
                    + "BRLAS400.DBO.T_THAIMAXSAVE_NO.TRUCK_NO + ' '+\n"
                    + "BRLAS400.DBO.T_THAIMAXSAVE_NO.DRIVER_NAME AS DRIVERDETAIL,\n"
                    + "BRLAS400.DBO.T_THAIMAXSAVE_NO.SEAL_NO, \n"
                    + "BRLAS400.DBO.T_THAIMAXSAVE_NO.CLOSE_TIME,\n"
                    + "BRLAS400.DBO.T_THAIMAXSAVE_NO.DO_ID_LIST,\n"
                    + "BRLAS400.DBO.T_THAIMAX_TYPE.SAVETYPE, \n"
                    + "BRLAS400.DBO.T_THAIMAXSAVE_NO.PRINT_TIME, BRLAS400.DBO.T_THAIMAXSAVE_NO.PRINT_TIME - BRLAS400.DBO.T_THAIMAXSAVE_NO.CLOSE_TIME AS SPENDTIME, CASE WHEN CANCEL = 1 THEN 'CANCEL' WHEN CANCEL = 0 THEN ' ' END AS CANCEL, BRLAS400.DBO.T_THAIMAXSAVE_NO.LOCATION, \n"
                    + "BRLAS400.DBO.TBL_WHS.DESCRIPTION\n"
                    + "FROM         \n"
                    + "BRLAS400.DBO.T_THAIMAXSAVE_NO INNER JOIN\n"
                    + "BRLAS400.DBO.T_THAIMAX_TYPE INNER JOIN\n"
                    + "BRLAS400.DBO.T_THAIMAXSAVE_DETAIL \n"
                    + "ON BRLAS400.DBO.T_THAIMAX_TYPE.SAVTYPE_ID = BRLAS400.DBO.T_THAIMAXSAVE_DETAIL.SAVTYPE_ID \n"
                    + "ON BRLAS400.DBO.T_THAIMAXSAVE_NO.SAV_NO = BRLAS400.DBO.T_THAIMAXSAVE_DETAIL.SAV_NO\n"
                    + "LEFT OUTER JOIN\n"
                    + "BRLAS400.DBO.TBL_WHS ON BRLAS400.DBO.T_THAIMAXSAVE_NO.LOCATION = BRLAS400.DBO.TBL_WHS.LOCATION\n"
                    + "LEFT OUTER JOIN\n"
                    + "BRLAS400.DBO.T_THAIMAX_WHS ON BRLAS400.DBO.T_THAIMAXSAVE_NO.WAREHOUSE = BRLAS400.DBO.T_THAIMAX_WHS.WAREHOUSE\n"
                    + "WHERE  (BRLAS400.DBO.T_THAIMAXSAVE_NO.SAV_DATE >= '01-JAN-19')\n"
                    + "AND CAST(YEAR(SAV_DATE) AS VARCHAR(4))\n"
                    + "--NOT PRINTED YET?\n"
                    + "+ RIGHT(REPLICATE('0', 2) + CAST(MONTH(SAV_DATE) AS VARCHAR(2)), 2) +\n"
                    + "RIGHT(REPLICATE('0', 2) + CAST(DAY(SAV_DATE) AS VARCHAR(2)), 2) = " + format2.format(chosedate) + "\n"
                    + "AND BRLAS400.DBO.T_THAIMAXSAVE_NO.SAV_NO IN (SELECT INIVNO FROM  BRLAS400.DBO.INVCNRN1) \n"
                    + "ORDER BY BRLAS400.DBO.T_THAIMAXSAVE_NO.SAV_NO DESC";
            ResultSet rs = sta.executeQuery(Sql);

            while (rs.next()) {
                String getDate = rs.getString("Date").trim();
                Date cvDate = new SimpleDateFormat("yyyyMMdd").parse(getDate);

                String WHS = "SELECT COALESCE(a.Warehouse,'-') as Warehouse\n"
                        + "from BRLAS400.dbo.T_ThaiMaxSave_no a\n"
                        + "WHERE a.Sav_no = '" + rs.getString("Sav_no").trim() + "'";
                ResultSet rs2 = sta2.executeQuery(WHS);
                if (rs2.next()) {

                    WHSname = "SELECT OACONO ,OAADK1 ,OACONM ,OAADR1 ,OAADR2 ,OAADR3, TRIM(OAADR1) || ' ' || TRIM(OAADR2) || ' ' || TRIM(OAADR3) AS Address_M3   \n"
                            + "FROM M3FDBPRD.CIADDR \n"
                            + "WHERE OACONO = '10' \n"
                            + "AND OAADK1 = '" + rs2.getString("Warehouse") + "'";
                    ResultSet rs3 = sta3.executeQuery(WHSname);
                    if (rs3.next()) {

                        model1.insertRow(model1.getRowCount(), new Object[]{
                            rs.getString("Driverdetail").trim(),
                            rs.getString("Sav_no").trim(),
                            rs2.getString("Warehouse").trim(),
                            rs3.getString("OACONM").trim(),
                            rs.getString("Date").trim()});
                    }
                }
                //System.out.println(cvDate);
                //format.format(getDate),});
                documentfoundnum.setText(Integer.toString(model1.getRowCount()) + " Document(s)");
            }
            rs.close();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
//                jButton1.setEnabled(true);
    }

     public String[] getAddressTHMAX(String sav_no) {
        String Address = "";
        try {
//            JOptionPane.showMessageDialog(null, sav_no);
            Connection mysql = ConnectMsSql.ConnectionDB();
            String sql = "SELECT COALESCE(a.Warehouse,'-') as Warehouse\n"
                    + "from BRLAS400.dbo.T_ThaiMaxSave_no a\n"
                    + "WHERE a.Sav_no = '" + sav_no.trim() + "'";
//            JOptionPane.showMessageDialog(null,"connection" + mysql);
            Statement sta = mysql.createStatement();
//            JOptionPane.showMessageDialog(null,sta);
            ResultSet rsl = sta.executeQuery(sql);

            while (rsl.next()) {
                Address = rsl.getString("Warehouse").trim();
            }
//            JOptionPane.showMessageDialog(null,"testtesttttt");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
            Logger.getLogger(ReportTHAIMAX.class.getName()).log(Level.SEVERE, null, ex);
        }
        String[] Address_M3 = getAddress_M3(Address);
        return Address_M3;
    }

    public String[] getAddress_M3(String whs) {
        String[] M3_Address = new String[4];
        try {
            Connection DB2 = ConnectDB2.ConnectionDB();
            String sql = "SELECT OACONO ,OAADK1 ,OACONM ,OAADR1 ,OAADR2 ,OAADR3, TRIM(OAADR1) || ' ' || TRIM(OAADR2) || ' ' || TRIM(OAADR3) AS Address_M3   \n"
                    + "FROM M3FDBPRD.CIADDR \n"
                    + "WHERE OACONO = '" + LoginMain.LoginCono + "' \n"
                    + "AND OAADK1 = '" + whs.trim() + "'";
            Statement sta = DB2.createStatement();
            ResultSet rsl = sta.executeQuery(sql);
            while (rsl.next()) {
                M3_Address[0] = rsl.getString("OACONM").trim();
                M3_Address[1] = rsl.getString("OAADK1").trim();
                M3_Address[2] = rsl.getString("Address_M3").trim();

            }
        } catch (SQLException ex) {
            Logger.getLogger(ReportTHAIMAX.class.getName()).log(Level.SEVERE, null, ex);
        }
        return M3_Address;
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReportPrintedTHAIMAX.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReportPrintedTHAIMAX.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReportPrintedTHAIMAX.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReportPrintedTHAIMAX.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReportPrintedTHAIMAX().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button btnCancel;
    private java.awt.Button buttonPrint;
    private java.awt.Label documentfoundnum;
    private javax.swing.JButton jButtonRefresh;
    private javax.swing.JCheckBox jCheckBoxSelectAll;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private java.awt.Label lblCompanyName;
    private java.awt.Label showingdate;
    // End of variables declaration//GEN-END:variables

    private Object getValueAt(int i, int selectedColumn) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
